// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright (c) 2016 Endless Computers, Inc.
 * Author: Carlo Caione <carlo@endlessm.com>
 */

/dts-v1/;

#include "meson-gxl-s905x-p212.dtsi"
#include <dt-bindings/leds/common.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/sound/meson-aiu.h>

/ {
	compatible = "amlogic,cumebox2", "amlogic,s905x", "amlogic,meson-gxl";
	model = "Amlogic Meson GXL (S905X) CumeBox2 Board";

	memory@0 {
		device_type = "memory";
		reg = <0x0 0x0 0x0 0x80000000>;// 2G
	};

	adc-keys {
		compatible = "adc-keys";
		io-channels = <&saradc 0>;
		io-channel-names = "buttons";
		keyup-threshold-microvolt = <1710000>;

		button-function {
			label = "Function";
			linux,code = <KEY_FN>;
			press-threshold-microvolt = <10000>;
		};
	};

	aliases {
		serial2 = &uart_AO_B;
		ethernet0 = &ethmac;
	};

	dio2133: analog-amplifier {
		compatible = "simple-audio-amplifier";
		sound-name-prefix = "AU2";
		VCC-supply = <&hdmi_5v>;
		enable-gpios = <&gpio GPIOH_5 GPIO_ACTIVE_HIGH>;
	};

	cvbs-connector {
		compatible = "composite-video-connector";
		port {
			cvbs_connector_in: endpoint {
				remote-endpoint = <&cvbs_vdac_out>;
			};
		};
	};

	hdmi-connector {
		compatible = "hdmi-connector";
		type = "a";
		port {
			hdmi_connector_in: endpoint {
				remote-endpoint = <&hdmi_tx_tmds_out>;
			};
		};
	};

	leds {
	    compatible = "gpio-leds";
		pinctrl-0 = <&eth_link_led_pins>, <&eth_act_led_pins>;
		pinctrl-names = "default";

	    eth_link_led: eth_link_led {
	        label = "eth_link_led";
	        gpios = <&gpio GPIOZ_14 GPIO_ACTIVE_HIGH>;
	        linux,default-trigger = "mdio_mux-0.e40908ff:08:link";
	    };
	
        eth_act_led: eth_act_led {
            label = "eth_act_led";
            gpios = <&gpio GPIOZ_15 GPIO_ACTIVE_HIGH>;
            linux,default-trigger = "none";
        };
	
	    led_blue: led_blue {
	        label = "led_blue";
	        color = <LED_COLOR_ID_BLUE>;
            function = LED_FUNCTION_STATUS;
	        gpios = <&gpio GPIODV_24 GPIO_ACTIVE_HIGH>; 
	        default-state = "off";        
	        linux,default-trigger = "default-on";           
            panic-indicator-inhibit;                         
	    };
	
	    led_red: led_red {
	        label = "led_red";
	        color = <LED_COLOR_ID_RED>;
	        function = LED_FUNCTION_PANIC;                   
	        gpios = <&gpio GPIODV_26 GPIO_ACTIVE_HIGH>;       
	        default-state = "off";
	        panic-indicator;                                  
	    };
	
	    led_green: led_green {
	        label = "led_green";
	        color = <LED_COLOR_ID_GREEN>;
            function = LED_FUNCTION_HEARTBEAT;
	        gpios = <&gpio GPIODV_27 GPIO_ACTIVE_HIGH>;       
	        default-state = "off";
	        //linux,default-trigger = "heartbeat";
	    };
    };

	thermal-zones {
		cpu-thermal {
			polling-delay-passive = <250>; /* milliseconds */
			polling-delay = <1000>; /* milliseconds */		
			thermal-sensors = <&scpi_sensors 0>;

			trips {
				cpu_active: cpu-active {
					temperature = <45000>; /* millicelsius */
					hysteresis = <2000>; /* millicelsius */
					type = "active";
				};

				cpu_passive: cpu-passive {
					temperature = <90000>; /* millicelsius */
					hysteresis = <2000>; /* millicelsius */
					type = "passive";
				};

				cpu_critical: cpu-critical {
					temperature = <100000>; /* millicelsius */
					hysteresis = <2000>; /* millicelsius */
					type = "critical";
				};
			};

			cooling-maps {
				map0 {
					trip = <&cpu_active>;
					cooling-device = <&gpio_fan THERMAL_NO_LIMIT 1>;
				};

				map1 {
					trip = <&cpu_passive>;
					cooling-device = <&gpio_fan THERMAL_NO_LIMIT 1>;
				};

				map2 {
					trip = <&cpu_critical>;
					cooling-device = <&gpio_fan THERMAL_NO_LIMIT 1>,
				          <&cpu0 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>,
				          <&cpu1 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>,
				          <&cpu2 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>,
				          <&cpu3 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>;
				};
			};
		};
	};

	gpio_fan:gpio-fan {
		#cooling-cells = <2>;
		compatible = "gpio-fan";
		status = "okay";
		gpio-fan,speed-map = <0 0 4500 1>;
		gpios = <&gpio_ao GPIOAO_3 GPIO_ACTIVE_HIGH>; //3 gpio 504
	};

	gpio-keys-polled {
		compatible = "gpio-keys-polled";
		poll-interval = <100>;

		power-button {
			label = "power";
			linux,code = <KEY_POWER>;
			gpios = <&gpio_ao GPIOAO_2 GPIO_ACTIVE_LOW>;//2 gpio 503
		};

		reset-button {
			label = "reset";
			linux,code = <KEY_FN_F1>;
			gpios = <&gpio_ao GPIOAO_9 GPIO_ACTIVE_LOW>;//9 gpio 510
		};

		ap-button {
			label = "ap";
			linux,code = <KEY_FN_F2>;
			gpios = <&gpio_ao GPIOAO_6 GPIO_ACTIVE_LOW>;  //6 gpio 507
		};
	};

	openvfd {
		compatible = "open,vfd";
		dev_name = "openvfd";
		status = "okay";
	};
};

&acodec {
	AVDD-supply = <&vddio_ao18>;
	status = "okay";
};

&aiu {
	status = "okay";
};

&cec_AO {
	status = "okay";
	pinctrl-0 = <&ao_cec_pins>;
	pinctrl-names = "default";
	hdmi-phandle = <&hdmi_tx>;
};

&cvbs_vdac_port {
	cvbs_vdac_out: endpoint {
		remote-endpoint = <&cvbs_connector_in>;
	};
};

&hdmi_tx {
	status = "okay";
	pinctrl-0 = <&hdmi_hpd_pins>, <&hdmi_i2c_pins>;
	pinctrl-names = "default";
	hdmi-supply = <&hdmi_5v>;
};

&hdmi_tx_tmds_port {
	hdmi_tx_tmds_out: endpoint {
		remote-endpoint = <&hdmi_connector_in>;
	};
};

/* This UART is brought out to the DB9 connector */
&uart_AO {
	status = "okay";
};

// enable I2C
&i2c_AO {
	status = "okay";
	pinctrl-0 = <&i2c_ao_pins>; //GPIOAO4,GPIOAO5
	pinctrl-names = "default";
	clock-frequency = < 400000 >;

	ssd1306: oled@3c {
        status = "okay";
		compatible = "solomon,ssd1306fb-i2c";
		reg = < 0x3c >;
		solomon,width = < 128 >;
		solomon,height = < 64 >;
		solomon,page-offset = < 0 >;
		solomon,com-invdir;
	};
};

&mdio {
    external_phy: ethernet-phy@8 {
        reg = <8>;
        max-speed = <1000>;

        // 尝试配置PHY内部LED
        led-modes = <0x00>, <0x02>; /* LED0: 关闭, LED1: 活动闪烁 */
        
        // 或者使用realtek兼容模式（虽然你的PHY是Amlogic的）
        realtek,led-0-mode = <0>;  // 关闭
        realtek,led-1-mode = <2>;  // 活动闪烁
    };
};

&ethmac {
    status = "okay";
    pinctrl-0 = <&eth_rgmii_pins>;
    pinctrl-names = "default";
    phy-handle = <&external_phy>;
    phy-mode = "rgmii";
    
    /* 确保PHY复位正确 */
    snps,reset-gpio = <&gpio GPIOZ_14 GPIO_ACTIVE_LOW>;
    snps,reset-delays-us = <0 10000 30000>;
    snps,reset-active-low;
    
    /* 启用MAC层面的统计，有助于用户空间监控 */
    amlogic,tx-delay-ps = <2000>;
    amlogic,rx-delay-ps = <2000>;
};




